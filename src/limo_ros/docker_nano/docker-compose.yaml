name: limo-noetic-nano

services:
  limo-noetic-container:
    image: theconstructai/limo:noetic
    platform: linux/arm64            # Jetson(ARM64)용
    pull_policy: always
    privileged: true                 # /dev 전체 접근(간편)
    network_mode: host
    container_name: limo-noetic-nano

    # Jetson에서 GPU 사용 (JetPack에 nvidia-container-toolkit 설치되어 있어야 함)
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=graphics,utility,compute

      # --- ROS 네트워킹 ---
      # 1) 같은 컨테이너에서 roscore 실행 시:
      - ROS_MASTER_URI=http://localhost:11311
      # 2) 외부(호스트/다른PC)에서 roscore일 때는 위 줄 대신 아래 두 줄을 쓰세요:
      # - ROS_MASTER_URI=http://<ROS_MASTER_IP>:11311
      # - ROS_IP=<NANO_IP>

      # --- X11 GUI ---
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1           # 공유메모리 이슈 회피

    volumes:
      # LiDAR/카메라/MCU 등 /dev 패스-스루
      - /dev:/dev
      # 워크스페이스 마운트 (호스트 → 컨테이너 /work)
      - ${HOME}/TMAH_ws:/work/TMAH_ws:rw 
      # GUI X소켓 공유 (호스트에서: xhost +si:localuser:root)
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # 드라이버/런치 스크립트 (읽기전용 권장)
      - ./volumes/launch_ros_drivers.sh:/launch_ros_drivers.sh:ro

    # 필요 시 도메인 고정 (예: master라는 호스트명 강제 해석)
    # extra_hosts:
    #   - "master:<ROS_MASTER_IP>"

    entrypoint: /ros_entrypoint.sh
    command: ["/launch_ros_drivers.sh"]
    restart: unless-stopped
